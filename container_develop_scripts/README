
Эти скрипты нужны для вспоможения при работе с образами и контейнерами.

С ними облегчается и ускоряется:
  - создание и отладка docker-контейнеров
  - исследование неизвестных контейнеров
  - избавление от рутины написания длинных строк
  - создание и отладка манифестов kubernetes
  - создание и отладка docker-compose.yaml
  - использование в автоматизации

Всё это - не более чем набор лайфхаков. Единые аргументы разных команд вынесены
в скрипт настроек. Сами же команды и их обращение к этому скрипту рассованы по
отдельным скриптам.
С одной стороны - это позволяет избавиться от необходимости вводить одно и тоже.
Что экономит время и не даёт забыть с чем вы работаете, а значит улучшает фокус
на задаче.
С другой - позволяет извлечь максимальное удобство из автодополнения bash по
tab. Что также экономит время и попутно избавляет от блужданий по bash history.
Наберите ./ и нажмите tab-tab - поймёте о чём речь. И это тоже улучшает фокус.

Большинство скриптов просты, минимальны и являются воплощением KISS. В них
нет ничего чудесного или удивительного, это даже не best, а скорее common
practice. Вся магия кроется в синергии, когда они работают вместе, по несколько
десятков раз. Особенно в отладке.

Скрипты универсальны и подкладывать их следует с помощью ссылки на директорию
с ними. Она должна располагаться на одном уровне с директориями в которых
происходит работа и носить имя "_scripts". Вот так:
cd "<КАТАЛОГ С ДИРЕКТОРИЯМИ ОБРАЗОВ>" && ln -s "<ДИРЕКТОРИЯ ЭТОЙ РЕПЫ>/_scripts"
В субдирректории ./_scripts/links находятся предподготовленные относительные
ссылки на все скрипты. Именно их и следует копировать в папку где ведётся
работа. Это позволяет "по-быстренькому" набирать нужный функционал для новой
задачи.

Чтобы понять все "зачем и почему" достаточно всего раз увидеть их в работе.
Скрипты использовались для создания образов из папок: ../images и ../k8s-supply.
Они наглядно демонстрируют подходы к использованию скриптов и могут послужить
источником для вдохновения.

Обилие скриптов и их имена - не случайны. Названия либо напоминают команды
докера, либо мнемоничны и отражают общие задачи для работы с контейнерами.
При этом подразумевается что со временем их число будет расти, пока они не
закроют весь функционал необходимый для отладки.

Также, имена одних скриптов могут испрользоваться как параметры для других.
Так deploy.sh принимает имена других скриптов в качестве опциий: create.sh,
rm.sh, enter.sh и др., выполняя с pod-ами k8s действия, аналогичные тем, что
сделали бы сами скрипты с docker-контейнерами. Такой ход отменяет необходимость
в пакете bash-completion.

Скрипты рассчитаны на взаимодействие со следующими папками:
image - содержит файлы образа для сборки. Если папка существует, то по её
наличию скрипт ./deploy_all.sh включит службу в массовую сборку образов.
volume - это папка для монтирования внутрь контейнера.
extracted - папка для вытаскивания файлов из контейнера с помощью cp

Настройки задаются через settings.sh и могут переопределяться через
individual_settings.sh. Подробнее можно прочесть в аннотации к settings.sh.
